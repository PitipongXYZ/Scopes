def VERSION = '0.1.0'
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.14.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    }
}
apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

repositories {
        mavenCentral()
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.0.2"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main.java.srcDirs += ['src/main/api']
    }


}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        dist(MavenPublication) {
            groupId 'me.emmano'
            version VERSION
            artifactId 'scopes'
            artifact "build/outputs/aar/scopesapi-debug.aar"
            artifact androidJavadocsJar {
                classifier 'source'
            }
            artifact androidSourcesJar {
                classifier 'javadoc'
            }
            pom.withXml {
                def root = asNode()
                def dependencies = root.appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if (it['group'] != null) {
                        def dependency = dependencies.appendNode('dependency')
                        dependency?.appendNode('groupId', it['group'])
                        dependency?.appendNode('artifactId', it['name'])
                        dependency?.appendNode('version', it['version'])
                    }
                }
            }
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApiKey
    publications = ['dist']

    dryRun = false
    publish = false
    pkg {
        repo = 'emmano'
        name = 'me.emmano.scopes'
        desc = 'Dagger scopes done easy'
        websiteUrl = 'https://github.com/emmano/Scopes/'
        issueTrackerUrl = 'https://github.com/emmano/Scopes/issues'
        vcsUrl = 'https://github.com/emmano/Scopes.git'
        licenses = ['MIT']
        labels = ['Android', 'Dagger', 'Retrofit']
        publicDownloadNumbers = true

        version {
            name = VERSION //Bintray logical VERSION name
            desc = 'Dagger scopes done easy'
            vcsTag = VERSION
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup:javawriter:2.5.0'
    compile 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
    compile 'com.jakewharton:butterknife:6.0.0'
}
